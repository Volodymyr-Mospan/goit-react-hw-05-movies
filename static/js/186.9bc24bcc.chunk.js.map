{"version":3,"file":"static/js/186.9bc24bcc.chunk.js","mappings":"yNAIMA,EAAM,IAAIC,EAAAA,EAiDhB,UA/CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,wCAGd,6GAEyBX,EAAIY,gBAAJ,gBACVV,EADU,YAEnBQ,GAJN,OAEUG,EAFV,OAMIP,EAAeO,GANnB,mDAQuB,iBAAf,KAAMC,KARd,mDASIC,QAAQC,MAAR,MATJ,0DAHc,sBAiBd,OAjBc,mCAedC,GAEO,WACLP,EAAgBQ,OACjB,CACF,GAAE,CAAChB,EAASK,KAGX,8BACI,OAACF,QAAD,IAACA,GAAAA,EAAac,eACd,0BACE,wBACGd,EAAYe,QAAQC,KAAI,SAAAC,GAAM,OAC7B,0BACGA,EAAOC,QACR,uBAAID,EAAOE,YAFJF,EAAOG,GADa,QASnC,4CAIP,C,yHChDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IACMC,EAAS,CACbC,QAFc,oCAKH3B,EAAb,qHACE,WAAkBS,GAAlB,gGAE2BgB,EAAAA,EAAAA,IAAU,qBAAsB,CACrDG,OAAQnB,EAAgBmB,OACxBF,OAAAA,IAJN,cAEUG,EAFV,yBAOWA,EAASC,KAAKX,SAPzB,mCASuB,iBAAf,KAAMN,KATd,mDAUIC,QAAQC,MAAR,MAVJ,yDADF,gHAeE,WAAegB,EAAOtB,GAAtB,gGAE2BgB,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,OAAQnB,EAAgBmB,OACxBF,QAAO,kBACFA,GADC,IAEJK,MAAAA,MANR,cAEUF,EAFV,yBAUWA,EAASC,KAAKX,SAVzB,mCAYuB,iBAAf,KAAMN,KAZd,mDAaIC,QAAQC,MAAR,MAbJ,yDAfF,yHAgCE,WAAsBiB,EAAcvB,GAApC,uFACyBgB,EAAAA,EAAAA,IAAUO,EAAc,CAC7CJ,OAAQnB,EAAgBmB,OACxBF,OAAAA,IAHJ,cACQG,EADR,yBAMSA,EAASC,MANlB,2CAhCF,+D","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { FetchApi } from 'services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst api = new FetchApi();\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [filmReviews, setFilmReviews] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchMovieDetails() {\n      try {\n        const result = await api.getMovieDetails(\n          `movie/${movieId}/reviews`,\n          abortController\n        );\n        setFilmReviews(result);\n      } catch (error) {\n        if (error.code === 'ERR_CANCELED') return;\n        console.error(error);\n      }\n    }\n    fetchMovieDetails();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      {!!filmReviews?.total_results ? (\n        <div>\n          <ul>\n            {filmReviews.results.map(review => (\n              <li key={review.id}>\n                {review.author}\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        \"We don't have any reviews for this movie\"\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ee11dca6bb556f59ebf7af76deb30565';\nconst params = {\n  api_key: API_KEY,\n};\n\nexport class FetchApi {\n  async getTrending(abortController) {\n    try {\n      const response = await axios.get('trending/movie/day', {\n        signal: abortController.signal,\n        params,\n      });\n\n      return response.data.results;\n    } catch (error) {\n      if (error.code === 'ERR_CANCELED') return;\n      console.error(error);\n    }\n  }\n\n  async getMovie(query, abortController) {\n    try {\n      const response = await axios.get('search/movie', {\n        signal: abortController.signal,\n        params: {\n          ...params,\n          query,\n        },\n      });\n\n      return response.data.results;\n    } catch (error) {\n      if (error.code === 'ERR_CANCELED') return;\n      console.error(error);\n    }\n  }\n\n  async getMovieDetails(movieDetails, abortController) {\n    const response = await axios.get(movieDetails, {\n      signal: abortController.signal,\n      params,\n    });\n\n    return response.data;\n  }\n}\n"],"names":["api","FetchApi","movieId","useParams","useState","filmReviews","setFilmReviews","navigate","useNavigate","useEffect","abortController","AbortController","getMovieDetails","result","code","console","error","fetchMovieDetails","abort","total_results","results","map","review","author","content","id","axios","params","api_key","signal","response","data","query","movieDetails"],"sourceRoot":""}