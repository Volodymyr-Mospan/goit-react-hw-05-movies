{"version":3,"file":"static/js/387.b9189d00.chunk.js","mappings":"iQAEaA,E,OAASC,QAAAA,IAAH,kJ,SCGbC,EAAM,IAAIC,EAAAA,EAqDhB,EAnDa,WAAO,IAAD,EACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,wCAGd,6GAEyBX,EAAIY,gBAAJ,gBACVV,EADU,YAEnBQ,GAJN,OAEUG,EAFV,OAMIP,EAAYO,GANhB,mDAQuB,iBAAf,KAAMC,KARd,mDASIC,QAAQC,MAAR,MATJ,0DAHc,sBAiBd,OAjBc,mCAedC,GAEO,WACLP,EAAgBQ,OACjB,CACF,GAAE,CAAChB,EAASK,KAGX,8BACI,OAACF,QAAD,IAACA,GAAD,UAACA,EAAUc,YAAX,OAAC,EAAgBC,OAAlB,OACGf,QADH,IACGA,OADH,EACGA,EAAUc,KAAKE,KAAI,SAAAC,GAAK,OACtB,UAACxB,EAAD,YAEI,gBACEyB,IAAG,yCAAoCD,EAAME,cAC7CC,IAAG,UAAKH,EAAMI,MACdC,MAAM,SAIV,4BACE,kCAAUL,EAAMI,SAChB,uCAAeJ,EAAMM,kBAXZN,EAAMO,GADG,IAgBxB,yCAGT,C,yHCrDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IACMC,EAAS,CACbC,QAFc,oCAKH/B,EAAb,qHACE,WAAkBS,GAAlB,gGAE2BoB,EAAAA,EAAAA,IAAU,qBAAsB,CACrDG,OAAQvB,EAAgBuB,OACxBF,OAAAA,IAJN,cAEUG,EAFV,yBAOWA,EAASC,KAAKC,SAPzB,mCASuB,iBAAf,KAAMtB,KATd,mDAUIC,QAAQC,MAAR,MAVJ,yDADF,gHAeE,WAAeqB,EAAO3B,GAAtB,gGAE2BoB,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,OAAQvB,EAAgBuB,OACxBF,QAAO,kBACFA,GADC,IAEJM,MAAAA,MANR,cAEUH,EAFV,yBAUWA,EAASC,KAAKC,SAVzB,mCAYuB,iBAAf,KAAMtB,KAZd,mDAaIC,QAAQC,MAAR,MAbJ,yDAfF,yHAgCE,WAAsBsB,EAAc5B,GAApC,uFACyBoB,EAAAA,EAAAA,IAAUQ,EAAc,CAC7CL,OAAQvB,EAAgBuB,OACxBF,OAAAA,IAHJ,cACQG,EADR,yBAMSA,EAASC,MANlB,2CAhCF,+D","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Person = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n\n  &:nth-child(odd) {\n    background-color: rgb(255, 231, 203);\n  }\n`;\n","import { FetchApi } from 'services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Person } from 'components/Cast/Cast.styled';\n\nconst api = new FetchApi();\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [filmCast, setFilmCast] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchMovieDetails() {\n      try {\n        const result = await api.getMovieDetails(\n          `movie/${movieId}/credits`,\n          abortController\n        );\n        setFilmCast(result);\n      } catch (error) {\n        if (error.code === 'ERR_CANCELED') return;\n        console.error(error);\n      }\n    }\n    fetchMovieDetails();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      {!!filmCast?.cast?.length\n        ? filmCast?.cast.map(actor => (\n            <Person key={actor.id}>\n              {\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={`${actor.name}`}\n                  width=\"100\"\n                />\n              }\n\n              <div>\n                <p>Name: {actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </div>\n            </Person>\n          ))\n        : \"We don't have any cast for this movie\"}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ee11dca6bb556f59ebf7af76deb30565';\nconst params = {\n  api_key: API_KEY,\n};\n\nexport class FetchApi {\n  async getTrending(abortController) {\n    try {\n      const response = await axios.get('trending/movie/day', {\n        signal: abortController.signal,\n        params,\n      });\n\n      return response.data.results;\n    } catch (error) {\n      if (error.code === 'ERR_CANCELED') return;\n      console.error(error);\n    }\n  }\n\n  async getMovie(query, abortController) {\n    try {\n      const response = await axios.get('search/movie', {\n        signal: abortController.signal,\n        params: {\n          ...params,\n          query,\n        },\n      });\n\n      return response.data.results;\n    } catch (error) {\n      if (error.code === 'ERR_CANCELED') return;\n      console.error(error);\n    }\n  }\n\n  async getMovieDetails(movieDetails, abortController) {\n    const response = await axios.get(movieDetails, {\n      signal: abortController.signal,\n      params,\n    });\n\n    return response.data;\n  }\n}\n"],"names":["Person","styled","api","FetchApi","movieId","useParams","useState","filmCast","setFilmCast","navigate","useNavigate","useEffect","abortController","AbortController","getMovieDetails","result","code","console","error","fetchMovieDetails","abort","cast","length","map","actor","src","profile_path","alt","name","width","character","id","axios","params","api_key","signal","response","data","results","query","movieDetails"],"sourceRoot":""}