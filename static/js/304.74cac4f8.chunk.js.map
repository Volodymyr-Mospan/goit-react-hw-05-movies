{"version":3,"file":"static/js/304.74cac4f8.chunk.js","mappings":"uPAEaA,E,OAAeC,QAAAA,GAAH,iH,kBCKnBC,EAAM,IAAIC,EAAAA,EA6ChB,EA3Ca,WACX,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAU5B,OATAH,GAAa,GACbR,EACGY,YAAYF,GACZG,MAAK,SAAAC,GAAM,OAAIV,EAAYU,EAAhB,IACXD,MAAK,kBAAML,GAAa,EAAnB,IACLO,OAAM,SAAAC,GACc,iBAAfA,EAAMC,MACVC,QAAQF,MAAMA,EACf,IACI,WACLN,EAAgBS,OACjB,CACF,GAAE,KAGD,UAAC,KAAD,YACE,2CAECZ,IAAa,SAACa,EAAA,EAAD,KAEd,0BACKjB,GACDA,EAASkB,KAAI,SAAAC,GAAO,IAAD,EACjB,OACE,SAACxB,EAAD,WACE,SAAC,KAAD,CAASyB,GAAE,kBAAaD,EAAGE,IAAMC,MAAO,CAAEC,KAAMrB,GAAhD,mBACGiB,EAAGK,aADN,QACeL,EAAGM,QAFDN,EAAGE,GAMzB,QAIV,C,yHC/CDK,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IACMC,EAAS,CACbC,QAFc,oCAKH9B,EAAb,qHACE,WAAkBS,GAAlB,gGAE2BmB,EAAAA,EAAAA,IAAU,qBAAsB,CACrDG,OAAQtB,EAAgBsB,OACxBF,OAAAA,IAJN,cAEUG,EAFV,yBAOWA,EAASC,KAAKC,SAPzB,mCASuB,iBAAf,KAAMlB,KATd,mDAUIC,QAAQF,MAAR,MAVJ,yDADF,gHAeE,WAAeoB,EAAO1B,GAAtB,gGAE2BmB,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,OAAQtB,EAAgBsB,OACxBF,QAAO,kBACFA,GADC,IAEJM,MAAAA,MANR,cAEUH,EAFV,yBAUWA,EAASC,KAAKC,SAVzB,mCAYuB,iBAAf,KAAMlB,KAZd,mDAaIC,QAAQF,MAAR,MAbJ,yDAfF,yHAgCE,WAAsBqB,EAAc3B,GAApC,uFACyBmB,EAAAA,EAAAA,IAAUQ,EAAc,CAC7CL,OAAQtB,EAAgBsB,OACxBF,OAAAA,IAHJ,cACQG,EADR,yBAMSA,EAASC,MANlB,2CAhCF,+D","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmListItem = styled.li`\n  padding: 5px;\n\n  &:nth-child(odd) {\n    background-color: rgb(255, 231, 203);\n  }\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { FetchApi } from 'services/api';\nimport { Container } from 'components/GlobalStyle';\nimport { FilmListItem } from 'pages/Home/Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst api = new FetchApi();\n\nconst Home = () => {\n  const [trending, setTrending] = useState(null);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setIsLoading(true);\n    api\n      .getTrending(abortController)\n      .then(result => setTrending(result))\n      .then(() => setIsLoading(false))\n      .catch(error => {\n        if (error.code === 'ERR_CANCELED') return;\n        console.error(error);\n      });\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <Container>\n      <h1>Trending today</h1>\n\n      {isLoading && <Loader />}\n\n      <ul>\n        {!!trending &&\n          trending.map(el => {\n            return (\n              <FilmListItem key={el.id}>\n                <NavLink to={`/movies/${el.id}`} state={{ from: location }}>\n                  {el.title ?? el.name}\n                </NavLink>\n              </FilmListItem>\n            );\n          })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ee11dca6bb556f59ebf7af76deb30565';\nconst params = {\n  api_key: API_KEY,\n};\n\nexport class FetchApi {\n  async getTrending(abortController) {\n    try {\n      const response = await axios.get('trending/movie/day', {\n        signal: abortController.signal,\n        params,\n      });\n\n      return response.data.results;\n    } catch (error) {\n      if (error.code === 'ERR_CANCELED') return;\n      console.error(error);\n    }\n  }\n\n  async getMovie(query, abortController) {\n    try {\n      const response = await axios.get('search/movie', {\n        signal: abortController.signal,\n        params: {\n          ...params,\n          query,\n        },\n      });\n\n      return response.data.results;\n    } catch (error) {\n      if (error.code === 'ERR_CANCELED') return;\n      console.error(error);\n    }\n  }\n\n  async getMovieDetails(movieDetails, abortController) {\n    const response = await axios.get(movieDetails, {\n      signal: abortController.signal,\n      params,\n    });\n\n    return response.data;\n  }\n}\n"],"names":["FilmListItem","styled","api","FetchApi","useState","trending","setTrending","location","useLocation","isLoading","setIsLoading","useEffect","abortController","AbortController","getTrending","then","result","catch","error","code","console","abort","Loader","map","el","to","id","state","from","title","name","axios","params","api_key","signal","response","data","results","query","movieDetails"],"sourceRoot":""}